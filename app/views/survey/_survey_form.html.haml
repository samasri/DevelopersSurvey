-url = 'https://stackoverflow.com/questions/' + @threadID
- page = Nokogiri::HTML(open(url))

-# Remove all StackOverFlow JavaScript
- nodes = []
- page.css('head')[0].children.each do |child|
	- if child.name == 'meta' or child.name == 'link' then nodes.push(child) end
- head = page.css('head')[0]
- head.inner_html = ''
- nodes.each do |node| head.add_child node end
- body = page.css('body')[0]
- body.children.each do |child|
	- if child.name == 'script' or child.name == 'noscript' then child.remove end

-# Add our stylesheets and JavaScript
- additions = stylesheet_link_tag    'application', media: 'all'
- additions += javascript_include_tag 'application'
- additions += csrf_meta_tags
- head.inner_html += additions
-#
- def removeIfExist(page, componentSpecifier)
	- multiple = false
	- if componentSpecifier[0] == '.' then multiple = true end
	- component = page.css(componentSpecifier)
	- if multiple 
		- unless component.empty?
			- component.each do |cmp| cmp.remove end
	- unless multiple
		- unless component.empty?
			- component[0].remove


-# Removing unnecessary components
- removeIfExist(page, '#left-sidebar')
- removeIfExist(page, '#js-gdpr-consent-banner')
- removeIfExist(page, '#dfp-tlb')
- removeIfExist(page, '#sidebar')
- removeIfExist(page, '#post-form')
- removeIfExist(page, '#tabs')
- removeIfExist(page, '#custom-header')
- removeIfExist(page, '#dfp-mlb') # Remove empty div space
- removeIfExist(page, '.comment-user')
- removeIfExist(page, '.post-signature')
- removeIfExist(page, '.pl8') # Remove 'Ask Question' button

-# Highlighting questions
- def searchArray(arr, key)
	- arr.each do |a|
		- if a.to_s == key.to_s then return true end
	- return false

- @sentences.each do |answerID, sentenceTexts|
	- sentenceTexts.each do |sentenceContainer|
		- sentence_id = sentenceContainer[0]
		- sentence_text = sentenceContainer[1]	
		- searchResult = searchArray(session[:answeredSentences], sentence_id)
		- if searchResult # Responses for this sentence have already been submitted
			- sentenceReplacement = '<mark style="background-color: grey">' + sentence_text + '</mark>'
		- unless searchResult # Responses for this sentence have not been submitted yet
			- btn = link_to sentence_text, responses_new_path(:picked_sentence => { :sentence_id => sentence_id.to_s}), remote: true
			- sentenceReplacement = '<mark>' + btn + '</mark>'
		- highlightedAnswer = page.css('#' + answerID)[0].inner_html.gsub(sentence_text, sentenceReplacement)
		- page.css('#' + answerID)[0].inner_html = highlightedAnswer

- # Adding modal div
- newDiv = Nokogiri::XML::Node.new('div', page)
- newDiv['class'] = 'modal fade'
- newDiv['id'] = 'modal'
- body.add_child(newDiv)

= html = page.to_html.html_safe
- # Add Button to navigate to the next thread
- questionsLeft = session[:toAnswer] - session[:answeredSentences]
- if questionsLeft.count == 0
	= link_to 'Next Thread', @nextPath, class: 'btn btn-primary', method: :post
- else
	.btn.btn-primary
		Answer
		= questionsLeft.count
		more sentences to proceed